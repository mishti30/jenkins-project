pipeline {
    agent {
        label 'agent1'
    }
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git credentialsId:'jenkins-project-repo',url:'https://github.com/mishti30/jenkins-project.git',branch:'jenkinssonar'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('src/frontend') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=jenkins-sonnar-project \
                        -Dsonar.projectKey=jenkins-sonnar-project '''
                    }
                }
            }
        }
        stage('QualityGate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }
        stage('OWASP Scan') {
            steps {
                dir('src/frontend') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-CHECK'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('TrivyFScan') {
            steps {
                dir('src/frontend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Image Create") {
            steps {
                script {
                    dir('src/frontend') {
                            sh 'docker build -t sonarci .'
                    }
                }
            }
        }
        stage("ImagePush") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-repo-creds', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
                    sh "docker tag sonarci ${env.docker_user}/sonarci:${BUILD_NUMBER}"
                    sh "docker login -u ${env.docker_user} -p ${env.docker_pass}"
                    sh "docker push ${env.docker_user}/sonarci:${BUILD_NUMBER}"
                    }
                }
            }
        }
        stage("ImageScan") {
            steps {
                sh 'trivy image prateekkumawat/sonarci:${BUILD_NUMBER} > trivyimage_${BUILD_NUMBER}.txt' 
            }
        }
    }
}